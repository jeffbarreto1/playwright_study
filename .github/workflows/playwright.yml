name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# Permissões necessárias para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas uma execução simultânea do workflow
concurrency:
  group: "playwright"
  cancel-in-progress: true

jobs:
  test:
    name: 'Run Tests (Shard ${{ matrix.shard }})'
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Continua executando mesmo se um shard falhar
      matrix:
        shard: [1, 2]  # Divide os testes em 2 shards
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'  # Habilita cache do npm

      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium  # Instala apenas Chromium para economizar tempo
        
      - name: Run Playwright tests
        run: |
          npx playwright test --shard=${{ matrix.shard }}/2 \
            --reporter=html,json \
            --output=test-results/shard-${{ matrix.shard }}
        continue-on-error: true  # Continua mesmo se os testes falharem
        
      - name: Upload test results
        if: always()  # Executa mesmo se os testes falharem
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.shard }}
          path: test-results/
          retention-days: 30

  report:
    name: 'Generate HTML Report'
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Playwright
        run: npm install -D @playwright/test

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-results
          pattern: playwright-results-*
          merge-multiple: true

      - name: List downloaded files
        run: ls -R all-results

      - name: Merge HTML Reports
        run: npx playwright merge-reports ./all-results --reporter html

      - name: Setup Pages
        if: success()
        uses: actions/configure-pages@v4

      - name: Upload artifact for GitHub Pages
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report

  deploy:
    name: 'Deploy to GitHub Pages'
    if: success() && github.ref == 'refs/heads/main'  # Deploy apenas na branch main
    needs: [report]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages